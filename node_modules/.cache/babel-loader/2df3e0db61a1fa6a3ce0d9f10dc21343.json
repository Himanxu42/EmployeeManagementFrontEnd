{"ast":null,"code":"var _jsxFileName = \"E:\\\\EmployeManagement\\\\frontend\\\\src\\\\Admin\\\\AddNew.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from '../Core/Sidebar/sidebar';\nimport Header from '../Core/Headers/Headers';\nimport styled from 'styled-components';\nimport { useForm } from 'react-hook-form';\nimport { addEmp } from './helper/adminapicalls';\nimport { Redirect } from 'react-router-dom';\nimport 'react-phone-number-input/style.css';\nimport { getDepts, getPos } from '../Admin/helper/adminapicalls';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.form`\n\tbackground-color: #e9e7e6;\n\tmargin-left: 130px;\n\tmargin-right: 100px;\n\tmargin-top: 20px;\n\tborder-radius: 10px;\n`;\n_c = Form;\nconst Error = styled.p`color: red;`;\n_c2 = Error;\nconst Button = styled.button`margin-left: 40%;`;\n_c3 = Button;\n\nconst AddNew = props => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    addEmp(data).then(data => {\n      if (data !== undefined) {\n        console.log(\"OK\");\n\n        /*#__PURE__*/\n        _jsxDEV(Redirect, {\n          to: \"/emplist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }, this);\n      }\n    });\n  };\n\n  const [employee, setEmployee] = useState({\n    salary: false,\n    departments: [],\n    positions: []\n  }); //destructure employee\n\n  var {\n    departments,\n    positions\n  } = employee; //load values on load\n\n  useEffect(() => {\n    const loadDept = () => {\n      //Learnt a new thing ->\n      // Array value get changed back initial value when u go out of scope where u changed its value\n      getDepts().then(dept => {\n        if (dept !== undefined) {\n          getPos().then(pos => {\n            if (pos !== undefined) {\n              //\tconsole.log('ok')\n              setEmployee({ ...employee,\n                departments: dept,\n                positions: pos\n              });\n            }\n          });\n        }\n      });\n    }; // eslint-disable-next-line no-restricted-globals\n\n\n    loadDept();\n  }, []);\n\n  function isNumeric(phone) {\n    return /^[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-/\\s.]?[0-9]{4}$/.test(phone);\n  }\n\n  function checkDept(dept) {\n    return dept !== 'Department';\n  }\n\n  function checkPos(pos) {\n    return pos !== 'Position';\n  }\n\n  const addNewForm = () => /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addform\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"form-label\",\n        children: \"Full Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        class: \"form-control \",\n        id: \"exampleInputEmail1\",\n        \"aria-describedby\": \"emailHelp\",\n        placeholder: \"Name\",\n        name: \"name\",\n        ref: register({\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), errors.name && /*#__PURE__*/_jsxDEV(Error, {\n        children: \"Name Field Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"form-label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"Email\",\n        class: \"form-control \",\n        id: \"exampleInputEmail1\",\n        \"aria-describedby\": \"emailHelp\",\n        placeholder: \"Email\",\n        name: \"email\",\n        ref: register({\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(Error, {\n        children: \"Email Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"form-label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        class: \"form-control \",\n        id: \"exampleInputEmail1\",\n        \"aria-describedby\": \"emailHelp\",\n        placeholder: \"Password\",\n        name: \"password\",\n        ref: register({\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(Error, {\n        children: \"Password is Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"form-label\",\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        class: \"form-control \",\n        name: \"phone\",\n        ref: register({\n          required: true,\n          validate: isNumeric\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), errors.phone && /*#__PURE__*/_jsxDEV(Error, {\n        children: \"Phone Number Invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"form-label\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        class: \"form-control \",\n        placeholder: \"Address\",\n        id: \"floatingTextarea2\",\n        rows: \"3\",\n        name: \"address\",\n        ref: register({\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), errors.address && /*#__PURE__*/_jsxDEV(Error, {\n        children: \"Address is Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        name: \"department\",\n        ref: register({\n          required: true,\n          validate: checkDept\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          disabled: true,\n          children: \"Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 6\n        }, this), departments && departments.length > 0 ? departments.map((dept, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: dept.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 40\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"No Department Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this), errors.department && /*#__PURE__*/_jsxDEV(Error, {\n        children: \"Department is Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control \",\n        name: \"position\",\n        placeholder: \"Category\",\n        ref: register({\n          required: true,\n          validate: checkPos\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          disabled: true,\n          children: \"Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 6\n        }, this), positions && positions.length > 0 ? positions.map((pos, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: pos.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 37\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"No Position Found Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this), errors.position && /*#__PURE__*/_jsxDEV(Error, {\n        children: \"Position is Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: \"0\",\n        name: \"salary\",\n        ref: register(),\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: \"0\",\n        name: \"role\",\n        ref: register(),\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-success\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-3\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-7 \",\n        children: addNewForm()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AddNew, \"g4lLzbsQ5G58p9KeVDlWJ5koL0w=\", false, function () {\n  return [useForm];\n});\n\n_c4 = AddNew;\nAddNew.propTypes = {};\nexport default AddNew;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Error\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"AddNew\");","map":{"version":3,"sources":["E:/EmployeManagement/frontend/src/Admin/AddNew.js"],"names":["React","useState","useEffect","Sidebar","Header","styled","useForm","addEmp","Redirect","getDepts","getPos","PropTypes","Form","form","Error","p","Button","button","AddNew","props","register","handleSubmit","errors","onSubmit","data","console","log","then","undefined","employee","setEmployee","salary","departments","positions","loadDept","dept","pos","isNumeric","phone","test","checkDept","checkPos","addNewForm","required","name","email","password","validate","address","length","map","index","department","position","propTypes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Sidebar from '../Core/Sidebar/sidebar';\r\nimport Header from '../Core/Headers/Headers';\r\nimport styled from 'styled-components';\r\nimport { useForm } from 'react-hook-form';\r\nimport { addEmp } from './helper/adminapicalls';\r\nimport { Redirect } from 'react-router-dom';\r\nimport 'react-phone-number-input/style.css';\r\n\r\nimport { getDepts, getPos } from '../Admin/helper/adminapicalls';\r\nimport PropTypes from 'prop-types';\r\nconst Form = styled.form`\r\n\tbackground-color: #e9e7e6;\r\n\tmargin-left: 130px;\r\n\tmargin-right: 100px;\r\n\tmargin-top: 20px;\r\n\tborder-radius: 10px;\r\n`;\r\nconst Error = styled.p`color: red;`;\r\nconst Button = styled.button`margin-left: 40%;`;\r\nconst AddNew = (props) => {\r\n\tconst { register, handleSubmit, errors } = useForm();\r\n\tconst onSubmit = (data) => {\r\n\t\tconsole.log(data);\r\n\t\taddEmp(data).then(data => {\r\n\t\t\tif (data !== undefined) {\r\n\t\t\t\tconsole.log(\"OK\");\r\n\t\t\t\t<Redirect to=\"/emplist\" />\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst [ employee, setEmployee ] = useState({\r\n\t\tsalary: false,\r\n\t\tdepartments: [],\r\n\t\tpositions: []\r\n\t});\r\n\t//destructure employee\r\n\tvar { departments, positions } = employee;\r\n\t//load values on load\r\n\r\n\tuseEffect(() => {\r\n\t\tconst loadDept = () => {\r\n\t\t\t//Learnt a new thing ->\r\n\t\t\t// Array value get changed back initial value when u go out of scope where u changed its value\r\n\r\n\t\t\tgetDepts().then((dept) => {\r\n\t\t\t\tif (dept !== undefined) {\r\n\t\t\t\t\tgetPos().then((pos) => {\r\n\t\t\t\t\t\tif (pos !== undefined) {\r\n\t\t\t\t\t\t\t//\tconsole.log('ok')\r\n\t\t\t\t\t\t\tsetEmployee({ ...employee, departments: dept, positions: pos });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\t\t// eslint-disable-next-line no-restricted-globals\r\n\r\n\t\tloadDept();\r\n\t}, []);\r\n\tfunction isNumeric(phone) {\r\n\t\treturn /^[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-/\\s.]?[0-9]{4}$/.test(phone);\r\n\t}\r\n\tfunction checkDept(dept) {\r\n\t\treturn dept !== 'Department';\r\n\t}\r\n\tfunction checkPos(pos) {\r\n\t\treturn pos !== 'Position';\r\n\t}\r\n\tconst addNewForm = () => (\r\n\t\t<Form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<div className=\"addform\">\r\n\t\t\t\t<label class=\"form-label\">Full Name</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclass=\"form-control \"\r\n\t\t\t\t\tid=\"exampleInputEmail1\"\r\n\t\t\t\t\taria-describedby=\"emailHelp\"\r\n\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t/>\r\n\t\t\t\t{errors.name && <Error>Name Field Required</Error>}\r\n\t\t\t\t<label class=\"form-label\">Email</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"Email\"\r\n\t\t\t\t\tclass=\"form-control \"\r\n\t\t\t\t\tid=\"exampleInputEmail1\"\r\n\t\t\t\t\taria-describedby=\"emailHelp\"\r\n\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t/>\r\n\t\t\t\t{errors.email && <Error>Email Required</Error>}\r\n\t\t\t\t<label class=\"form-label\">Password</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tclass=\"form-control \"\r\n\t\t\t\t\tid=\"exampleInputEmail1\"\r\n\t\t\t\t\taria-describedby=\"emailHelp\"\r\n\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t/>\r\n\t\t\t\t{errors.password && <Error>Password is Required</Error>}\r\n\t\t\t\t<label class=\"form-label\">Phone</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\tclass=\"form-control \"\r\n\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\tref={register({ required: true, validate: isNumeric })}\r\n\t\t\t\t/>\r\n\t\t\t\t{errors.phone && <Error>Phone Number Invalid</Error>}\r\n\t\t\t\t<label class=\"form-label\">Address</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclass=\"form-control \"\r\n\t\t\t\t\tplaceholder=\"Address\"\r\n\t\t\t\t\tid=\"floatingTextarea2\"\r\n\t\t\t\t\trows=\"3\"\r\n\t\t\t\t\tname=\"address\"\r\n\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t/>\r\n\t\t\t\t{errors.address && <Error>Address is Required</Error>}\r\n\t\t\t\t<select\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tname=\"department\"\r\n\t\t\t\t\tref={register({ required: true, validate: checkDept })}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option selected disabled>\r\n\t\t\t\t\t\tDepartment\r\n\t\t\t\t\t</option>\r\n\t\t\t\t\t{departments && departments.length > 0 ? (\r\n\t\t\t\t\t\tdepartments.map((dept, index) => <option key={index}>{dept.name}</option>)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<option>No Department Found</option>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</select>\r\n\t\t\t\t{errors.department && <Error>Department is Required</Error>}\r\n\t\t\t\t<select\r\n\t\t\t\t\tclassName=\"form-control \"\r\n\t\t\t\t\tname=\"position\"\r\n\t\t\t\t\tplaceholder=\"Category\"\r\n\t\t\t\t\tref={register({ required: true, validate: checkPos })}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option selected disabled>\r\n\t\t\t\t\t\tPosition\r\n\t\t\t\t\t</option>\r\n\t\t\t\t\t{positions && positions.length > 0 ? (\r\n\t\t\t\t\t\tpositions.map((pos, index) => <option key={index}>{pos.name}</option>)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<option>No Position Found Found</option>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</select>\r\n\t\t\t\t{errors.position && <Error>Position is Required</Error>}\r\n\t\t\t\t<input value='0' name=\"salary\" ref={register()} hidden />\r\n\t\t\t\t<input value='0' name=\"role\" ref={register()} hidden/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button className=\"btn btn-success\">Submit</Button>\r\n\t\t\t</div>\r\n\t\t</Form>\r\n\t);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-sm-3\">\r\n\t\t\t\t\t<Sidebar />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-sm-7 \">{addNewForm()}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nAddNew.propTypes = {};\r\n\r\nexport default AddNew;\r\n"]},"metadata":{},"sourceType":"module"}